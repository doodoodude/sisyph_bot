<launch>

  <!-- namespace for camera input -->
  <arg name="camera" default="usb_cam"/>
  <arg name="image" default="image_raw"/>
  <arg name="transport" default="compressed"/>
  <arg name="fiducial_len" default="0.202"/>
  <arg name="dictionary" default="10"/>  
  <arg name="do_pose_estimation" default="true"/>
  <!-- If vis_msgs set to true, pose estimation will be published with ROS standard vision_msgs -->
  <arg name="vis_msgs" default="false"/>
  <arg name="ignore_fiducials" default="" />
  <arg name="fiducial_len_override" default="" />
  <arg name="verbose" default="false"/>

  <arg name="video_device" default="/dev/video2"/>

  <include file="$(find sisyph_slam)/launch/usb_cam.launch" pass_all_args="true"/>

  <node pkg="aruco_detect" name="aruco_detect"
    type="aruco_detect" output="screen" respawn="false">
    <param name="image_transport" value="$(arg transport)"/>
    <param name="publish_images" value="true" />
    <param name="fiducial_len" value="$(arg fiducial_len)"/>
    <param name="dictionary" value="$(arg dictionary)"/>
    <param name="do_pose_estimation" value="$(arg do_pose_estimation)"/>
    <param name="vis_msgs" value="$(arg vis_msgs)"/>
    <param name="ignore_fiducials" value="$(arg ignore_fiducials)"/>
    <param name="fiducial_len_override" value="$(arg fiducial_len_override)"/>
    <param name="verbose" value="$(arg verbose)"/>
    <remap from="camera/compressed"
        to="$(arg camera)/$(arg image)/$(arg transport)"/>
    <remap from="camera_info" to="$(arg camera)/camera_info"/>
  </node>


  <!-- <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="/fiducial_images"/>
    <param name="autosize" value="true" />
  </node> -->

  <!-- rosrun tf static_transform_publisher 0 0 0 0 0 0 map usb_cam 1000 -->
  <!-- <node name="$(arg camera)_transform_pub" pkg="tf" type="static_transform_publisher" output="screen" 
  args="0 0 0 0 0 0 1 map $(arg camera) 100"></node> -->

</launch>
